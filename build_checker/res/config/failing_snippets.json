[
    {
        "idx": 0,
        "prompt": "Human: Typed Cluster Example: Give an example of a typed cluster where each node logs 'Cluster member up' upon joining the cluster.",
        "code": "// TypedClusterExample.scala\n// This example subscribes to all cluster events using the typed API and logs when a member is marked as Up.\n\nimport akka.actor.typed.scaladsl.Behaviors\nimport akka.actor.typed.{ActorSystem, Behavior}\n// Import cluster events from the proper package\nimport akka.cluster.typed.ClusterEvent.{MemberEvent, MemberUp, MemberRemoved}\nimport akka.cluster.typed.{Cluster, Subscribe}\n\nobject TypedClusterExample {\n  // Define a protocol for our cluster listener\n  sealed trait Command\n  private final case class WrappedMemberEvent(event: MemberEvent) extends Command\n\n  def apply(): Behavior[Command] = Behaviors.setup { context =>\n    // Obtain the Cluster instance from the typed ActorSystem\n    val cluster = Cluster(context.system)\n\n    // Create a message adapter that wraps MemberEvent into our Command\n    val memberEventAdapter = context.messageAdapter[MemberEvent](WrappedMemberEvent(_))\n\n    // Subscribe to all cluster events (MemberUp, MemberRemoved, etc.)\n    cluster.subscriptions ! Subscribe(memberEventAdapter, classOf[MemberEvent])\n\n    // Process incoming wrapped events\n    Behaviors.receiveMessage {\n      case WrappedMemberEvent(MemberUp(member)) =>\n        context.log.info(s\"Cluster member is Up: ${member.address}\")\n        Behaviors.same\n      case WrappedMemberEvent(MemberRemoved(member, previousStatus)) =>\n        context.log.info(s\"Cluster member removed: ${member.address} (was $previousStatus)\")\n        Behaviors.same\n      case WrappedMemberEvent(event) =>\n        context.log.info(s\"Other cluster event: $event\")\n        Behaviors.same\n    }\n  }\n}\n\nobject TypedClusterExampleApp extends App {\n  // In a real cluster, you would start multiple ActorSystems on different ports\n  val system: ActorSystem[TypedClusterExample.Command] = ActorSystem(TypedClusterExample(), \"MyCluster\")\n  Thread.sleep(10000) // Allow time for cluster events to be logged\n  system.terminate()\n}\n",
        "error_output": "STDOUT:\n[info] welcome to sbt 1.10.5 (Eclipse Adoptium Java 21.0.6)\n[info] loading settings for project akka_placeholder-build-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project/project\n[info] loading settings for project akka_placeholder-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project\n[success] Generated .bloop/akka_placeholder-build.json\n[success] Total time: 2 s, completed 11 feb 2025, 16:40:16\n[info] loading settings for project root from build.sbt ...\n[info] set current project to akka_placeholder (in build file:/home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/)\n[info] compiling 1 Scala source to /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/target/scala-3.5.2/classes ...\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:7:26 \n[error] 7 |import akka.cluster.typed.ClusterEvent.{MemberEvent, MemberUp, MemberRemoved}\n[error]   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error]   |       value ClusterEvent is not a member of akka.cluster.typed\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:28:58 \n[error] 28 |        context.log.info(s\"Cluster member is Up: ${member.address}\")\n[error]    |                                                   ^^^^^^^^^^^^^^\n[error]    |                                    value address is not a member of Any\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:31:60 \n[error] 31 |        context.log.info(s\"Cluster member removed: ${member.address} (was $previousStatus)\")\n[error]    |                                                     ^^^^^^^^^^^^^^\n[error]    |                                    value address is not a member of Any\n[error] three errors found\n[error] (Compile / compileIncremental) Compilation failed\n[error] Total time: 5 s, completed 11 feb 2025, 16:40:21\n\nSTDERR:\n",
        "error_cause": ""
    },
    {
        "idx": 3,
        "prompt": "Human: Supervised Actor Example: Construct a typed actor that resumes on NumberFormatException but stops on other exceptions.",
        "code": "// ResumableActor.scala\n// This example demonstrates a typed actor with a supervised strategy.\n\nimport akka.actor.typed.scaladsl.Behaviors\nimport akka.actor.typed.{ActorSystem, Behavior, SupervisorStrategy}\n\nobject ResumableActor {\n  sealed trait Command\n  case class ParseNumber(input: String) extends Command\n\n  def apply(): Behavior[Command] = Behaviors.receive { (ctx, msg) =>\n    msg match {\n      case ParseNumber(input) =>\n        // This may throw a NumberFormatException if input is not numeric\n        val num = input.toInt\n        ctx.log.info(s\"Parsed number: $num\")\n        Behaviors.same\n    }\n  }\n}\n\nobject ResumableBehavior {\n  import ResumableActor._\n  def apply(): Behavior[Command] =\n    Behaviors.supervise(ResumableActor())\n      .onFailure[NumberFormatException](SupervisorStrategy.resume)\n      .onFailure[Exception](SupervisorStrategy.stop)\n}\n\nobject ResumeOnTypedExceptionExampleApp extends App {\n  val system = ActorSystem(ResumableBehavior(), \"ResumeTypedSystem\")\n  system ! ResumableActor.ParseNumber(\"123\")\n  system ! ResumableActor.ParseNumber(\"abc\") // Triggers NumberFormatException; actor resumes\n  system ! ResumableActor.ParseNumber(\"999\")\n  Thread.sleep(1000)\n  system.terminate()\n}\n",
        "error_output": "STDOUT:\n[info] welcome to sbt 1.10.5 (Eclipse Adoptium Java 21.0.6)\n[info] loading settings for project akka_placeholder-build-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project/project\n[info] loading settings for project akka_placeholder-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project\n[success] Generated .bloop/akka_placeholder-build.json\n[success] Total time: 1 s, completed 11 feb 2025, 16:40:49\n[info] loading settings for project root from build.sbt ...\n[info] set current project to akka_placeholder (in build file:/home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/)\n[info] compiling 1 Scala source to /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/target/scala-3.5.2/classes ...\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:27:7 \n[error] 25 |    Behaviors.supervise(ResumableActor())\n[error] 26 |      .onFailure[NumberFormatException](SupervisorStrategy.resume)\n[error] 27 |      .onFailure[Exception](SupervisorStrategy.stop)\n[error]    |    ^\n[error]    |value onFailure is not a member of akka.actor.typed.Behavior[ResumableActor.Command]\n[error] one error found\n[error] (Compile / compileIncremental) Compilation failed\n[error] Total time: 3 s, completed 11 feb 2025, 16:40:52\n\nSTDERR:\n",
        "error_cause": ""
    },
    {
        "idx": 5,
        "prompt": "Human: Partitioned Cluster Sharding: Construct a typed actor using cluster sharding that partitions entities by the numeric mod of their IDs.",
        "code": "// TypedClusterShardingModExample.scala\n// This example initializes cluster sharding for entities of type ModEntity, partitioned by the numeric mod of their ID.\n\nimport akka.actor.typed.scaladsl.Behaviors\nimport akka.actor.typed.{ActorSystem, Behavior}\nimport akka.cluster.sharding.typed.scaladsl.{ClusterSharding, Entity, EntityTypeKey}\n\nobject ModEntity {\n  // Define the commands for the entity\n  sealed trait Command { def entityId: String }\n  case class Process(entityId: String, payload: String) extends Command\n\n  // Simple behavior that logs the received message\n  def apply(entityId: String): Behavior[Command] = Behaviors.receive { (ctx, command) =>\n    command match {\n      case Process(_, payload) =>\n        ctx.log.info(s\"ModEntity [$entityId] processing: $payload\")\n        Behaviors.same\n    }\n  }\n}\n\nobject TypedClusterShardingModExampleApp extends App {\n  import ModEntity._\n  val TypeKey: EntityTypeKey[Command] = EntityTypeKey[Command](\"ModEntity\")\n\n  // Create a typed ActorSystem\n  val system = ActorSystem(Behaviors.empty, \"ModShardCluster\")\n  val sharding = ClusterSharding(system)\n\n  // Initialize the shard region\n  sharding.init(\n    Entity(TypeKey)(createBehavior = entityContext => ModEntity(entityContext.entityId))\n  )\n\n  // In a real cluster, messages would be sent via the shard region\n  Thread.sleep(5000)\n  system.terminate()\n}\n",
        "error_output": "STDOUT:\n[info] welcome to sbt 1.10.5 (Eclipse Adoptium Java 21.0.6)\n[info] loading settings for project akka_placeholder-build-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project/project\n[info] loading settings for project akka_placeholder-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project\n[success] Generated .bloop/akka_placeholder-build.json\n[success] Total time: 2 s, completed 11 feb 2025, 16:41:09\n[info] loading settings for project root from build.sbt ...\n[info] set current project to akka_placeholder (in build file:/home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/)\n[info] compiling 1 Scala source to /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/target/scala-3.5.2/classes ...\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:6:20 \n[error] 6 |import akka.cluster.sharding.typed.scaladsl.{ClusterSharding, Entity, EntityTypeKey}\n[error]   |       ^^^^^^^^^^^^^^^^^^^^^\n[error]   |       value sharding is not a member of akka.cluster\n[error] one error found\n[error] (Compile / compileIncremental) Compilation failed\n[error] Total time: 4 s, completed 11 feb 2025, 16:41:13\n\nSTDERR:\n",
        "error_cause": ""
    },
    {
        "idx": 7,
        "prompt": "Human: Typed Cluster Membership Watcher: Build a typed cluster membership watcher that logs join and removal events using MemberEvent.",
        "code": "// TypedClusterMembershipWatcher.scala\n// This example subscribes to cluster membership events and logs when members join or leave.\n\nimport akka.actor.typed.scaladsl.Behaviors\nimport akka.actor.typed.{ActorSystem, Behavior}\nimport akka.cluster.typed.{Cluster, Subscribe}\nimport akka.cluster.typed.ClusterEvent.{MemberEvent, MemberUp, MemberRemoved}\n\nobject MembershipWatcher {\n  sealed trait Command\n  private final case class WrappedMemberEvent(event: MemberEvent) extends Command\n\n  def apply(): Behavior[Command] = Behaviors.setup { ctx =>\n    // Create an adapter to wrap MemberEvent messages\n    val adapter = ctx.messageAdapter[MemberEvent](WrappedMemberEvent(_))\n    // Subscribe to all membership events\n    Cluster(ctx.system).subscriptions ! Subscribe(adapter, classOf[MemberEvent])\n\n    Behaviors.receiveMessage {\n      case WrappedMemberEvent(MemberUp(member)) =>\n        ctx.log.info(s\"Member is up: ${member.address}\")\n        Behaviors.same\n      case WrappedMemberEvent(MemberRemoved(member, previousStatus)) =>\n        ctx.log.info(s\"Member removed: ${member.address} (was $previousStatus)\")\n        Behaviors.same\n      case WrappedMemberEvent(other) =>\n        ctx.log.info(s\"Other cluster event: $other\")\n        Behaviors.same\n    }\n  }\n}\n\nobject TypedClusterMembershipExampleApp extends App {\n  val system = ActorSystem(MembershipWatcher(), \"ClusterMembershipSystem\")\n  Thread.sleep(10000)\n  system.terminate()\n}\n",
        "error_output": "STDOUT:\n[info] welcome to sbt 1.10.5 (Eclipse Adoptium Java 21.0.6)\n[info] loading settings for project akka_placeholder-build-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project/project\n[info] loading settings for project akka_placeholder-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project\n[success] Generated .bloop/akka_placeholder-build.json\n[success] Total time: 2 s, completed 11 feb 2025, 16:41:32\n[info] loading settings for project root from build.sbt ...\n[info] set current project to akka_placeholder (in build file:/home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/)\n[info] compiling 1 Scala source to /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/target/scala-3.5.2/classes ...\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:7:26 \n[error] 7 |import akka.cluster.typed.ClusterEvent.{MemberEvent, MemberUp, MemberRemoved}\n[error]   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n[error]   |       value ClusterEvent is not a member of akka.cluster.typed\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:21:46 \n[error] 21 |        ctx.log.info(s\"Member is up: ${member.address}\")\n[error]    |                                       ^^^^^^^^^^^^^^\n[error]    |                                    value address is not a member of Any\n[error] -- [E008] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:24:48 \n[error] 24 |        ctx.log.info(s\"Member removed: ${member.address} (was $previousStatus)\")\n[error]    |                                         ^^^^^^^^^^^^^^\n[error]    |                                    value address is not a member of Any\n[error] three errors found\n[error] (Compile / compileIncremental) Compilation failed\n[error] Total time: 5 s, completed 11 feb 2025, 16:41:37\n\nSTDERR:\n",
        "error_cause": ""
    },
    {
        "idx": 8,
        "prompt": "Human: Stdin Stream Example: Construct a typed streams example reading lines from stdin with StreamConverters, logging them in the console.",
        "code": "// StdinStreamTyped.scala\n// This example reads lines from standard input using a stream and prints each line.\n\nimport akka.actor.typed.scaladsl.Behaviors\nimport akka.actor.typed.{ActorSystem, Behavior}\nimport akka.stream.scaladsl.{Framing, Sink, StreamConverters}\nimport akka.util.ByteString\nimport akka.stream.SystemMaterializer\nimport scala.concurrent.ExecutionContext\nimport akka.{Done, NotUsed}\nimport scala.concurrent.Future\n\nobject StdinStreamApp extends App {\n  // Create a simple root behavior that sets up the stream\n  val root: Behavior[Nothing] = Behaviors.setup[Nothing] { context =>\n    implicit val mat = SystemMaterializer(context.system).materializer\n    implicit val ec: ExecutionContext = context.executionContext\n\n    // Create a source from System.in\n    val source: Source[String, NotUsed] = StreamConverters.fromInputStream(() => System.in)\n      .via(\n        Framing.delimiter(\n          ByteString(\"\\n\"),         // Use ByteString for the newline delimiter\n          maximumFrameLength = 256,\n          allowTruncation = true\n        )\n      )\n      .map(_.utf8String)             // Convert bytes to UTF-8 string\n\n    // Sink that prints each line\n    val sink: Sink[String, Future[Done]] = Sink.foreach(line => println(s\"You typed: $line\"))\n\n    // Run the stream\n    val done: Future[Done] = source.runWith(sink)\n    done.onComplete { _ =>\n      context.system.terminate()\n    }\n\n    Behaviors.empty\n  }\n\n  val system = ActorSystem(root, \"StdinStreamSystem\")\n}\n",
        "error_output": "STDOUT:\n[info] welcome to sbt 1.10.5 (Eclipse Adoptium Java 21.0.6)\n[info] loading settings for project akka_placeholder-build-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project/project\n[info] loading settings for project akka_placeholder-build from metals.sbt ...\n[info] loading project definition from /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/project\n[success] Generated .bloop/akka_placeholder-build.json\n[success] Total time: 1 s, completed 11 feb 2025, 16:41:42\n[info] loading settings for project root from build.sbt ...\n[info] set current project to akka_placeholder (in build file:/home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/)\n[info] compiling 1 Scala source to /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/target/scala-3.5.2/classes ...\n[error] -- [E006] Not Found Error: /home/lorix/Documenti/uni/tesi/finetuning-llama3.2-scala-for-dsl/build_checker/res/akka_placeholder/src/main/scala/Main.scala:20:16 \n[error] 20 |    val source: Source[String, NotUsed] = StreamConverters.fromInputStream(() => System.in)\n[error]    |                ^^^^^^\n[error]    |   Not found: type Source - did you mean Double.type? or perhaps Double?\n[error]    |\n[error]    | longer explanation available when compiling with `-explain`\n[error] one error found\n[error] (Compile / compileIncremental) Compilation failed\n[error] Total time: 3 s, completed 11 feb 2025, 16:41:45\n\nSTDERR:\n",
        "error_cause": ""
    }
]